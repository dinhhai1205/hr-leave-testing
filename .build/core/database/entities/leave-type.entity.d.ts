import { ELeaveTypeRoundingOptions } from '../../../modules/time-off/modules/leave-type/enums/leave-type-rounding-options.enum';
import { AbstractEntity } from './abstract.entity';
import { CompanyEntity } from './company.entity';
import { LeaveTrxEntity } from './leave-trx.entity';
import { LeaveTypeAssignmentEntity } from './leave-type-assigment.entity';
import { LeaveTypeBalanceEntity } from './leave-type-balance.entity';
import { LeaveTypePolicyEntity } from './leave-type-policy.entity';
import { LeaveEntity } from './leave.entity';
export declare class LeaveTypeEntity extends AbstractEntity {
    id: number;
    companyId: number;
    createdBy: string;
    updatedBy: string;
    code: string;
    name: string;
    remark: string;
    paidLeave: boolean;
    color: string;
    startDate: Date;
    endDate: Date;
    allowApplyExceed: boolean;
    allowFutureDates: boolean;
    daysFromNow: number;
    allowPastDates: boolean;
    daysAgo: number;
    daysInAdvance: number;
    maxDayApply: number;
    maxConsecutive: number;
    allowApplyHalfDay: boolean;
    includePublicHoliday: boolean;
    includeNonWorkingDay: boolean;
    isSpecial: boolean;
    cfRoundTo: ELeaveTypeRoundingOptions;
    active: boolean;
    activeForEss: boolean;
    parentId: number | null;
    company: CompanyEntity;
    leaves: LeaveEntity[];
    leaveTypePolicies: LeaveTypePolicyEntity[];
    leaveTypeBalances: LeaveTypeBalanceEntity[];
    employeeLeaveTypeBalance: LeaveTypeBalanceEntity;
    leaveTypeAssignment: LeaveTypeAssignmentEntity;
    leaveTransactions: LeaveTrxEntity[];
    parent: LeaveTypeEntity | null;
    children: LeaveTypeEntity[];
}
